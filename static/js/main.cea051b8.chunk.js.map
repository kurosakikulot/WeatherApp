{"version":3,"sources":["components/images/Logo.png","components/nav/Nav.js","components/providers/WeatherContext.js","components/form/Form.js","components/pages/Home.js","App.js","index.js"],"names":["module","exports","Nav","className","href","src","logo","alt","height","width","WeatherContext","createContext","WeatherProvider","props","useState","weather","temp","minTemp","maxTemp","wind","windDeg","country","name","clouds","setWeather","Provider","value","children","Form","APP_KEY","query","setQuery","search","setSearch","useContext","useEffect","fetchWeather","updateWeather","e","preventDefault","window","addEventListener","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","fetch","then","res","json","data","description","Math","floor","main","temp_min","temp_max","speed","deg","sys","all","alert","response","ok","onSubmit","id","type","onChange","target","onClick","Home","toUpperCase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cea051b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.dc520f38.png\";","import React from \"react\";\r\nimport logo from \"../images/Logo.png\";\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <nav className=\"transparent z-depth-0\">\r\n      <div className=\"nav-wrapper container\">\r\n        <a href=\"#\" className=\"brand-logo\">\r\n          <img\r\n            className=\"logo\"\r\n            src={logo}\r\n            alt=\"logo\"\r\n            height=\"100px\"\r\n            width=\"250px\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = props => {\r\n  const [weather, setWeather] = useState({\r\n    weather: \"\",\r\n    temp: \"\",\r\n    minTemp: \"\",\r\n    maxTemp: \"\",\r\n    wind: \"\",\r\n    windDeg: \"\",\r\n    country: \"\",\r\n    name: \"\",\r\n    clouds: \"\"\r\n  });\r\n\r\n  return (\r\n    <WeatherContext.Provider value={[weather, setWeather]}>\r\n      {props.children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { WeatherContext } from \"../providers/WeatherContext\";\r\n\r\nexport default function Form() {\r\n  const APP_KEY = \"744b3384c5a94cad26fb50f00221e13c\";\r\n  const [query, setQuery] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [weather, setWeather] = useContext(WeatherContext);\r\n\r\n  useEffect(() => {\r\n    fetchWeather();\r\n  }, [query]);\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const updateWeather = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  window.addEventListener(\"load\", () => {\r\n    let long;\r\n    let lat;\r\n\r\n    navigator.geolocation\r\n      ? navigator.geolocation.getCurrentPosition(position => {\r\n          long = position.coords.longitude;\r\n          lat = position.coords.latitude;\r\n          fetch(\r\n            `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${APP_KEY}`\r\n          )\r\n            .then(res => res.json())\r\n            .then(data =>\r\n              setWeather({\r\n                weather: data.weather[0].description,\r\n                temp: `Temperature: ${Math.floor(data.main.temp - 273.15)} °C`,\r\n                minTemp: `Min(${Math.floor(data.main.temp_min - 273.15)} °C)`,\r\n                maxTemp: `Max(${Math.floor(data.main.temp_max - 273.15)} °C)`,\r\n                wind: \"Wind Speed m/s is \" + data.wind.speed,\r\n                windDeg: \"Coming from \" + data.wind.deg + \" Degrees\",\r\n                country: \"Country Code: \" + data.sys.country,\r\n                name: data.name,\r\n                clouds: `Clouds count: ${data.clouds.all}`\r\n              })\r\n            );\r\n        })\r\n      : alert(\"Please enter a city\");\r\n  });\r\n\r\n  const fetchWeather = props => {\r\n    let checkFetch = response => {\r\n      if (!response.ok) {\r\n        throw alert(\"Please enter an existing City name\");\r\n      }\r\n      return response;\r\n    };\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${[\r\n        query\r\n      ]}&appid=${APP_KEY}`\r\n    )\r\n      .then(checkFetch)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setWeather({\r\n          weather: data.weather[0].description,\r\n          temp: `Temperature: ${Math.floor(data.main.temp - 273.15)} °C`,\r\n          minTemp: `Min(${Math.floor(data.main.temp_min - 273.15)} °C)`,\r\n          maxTemp: `Max(${Math.floor(data.main.temp_max - 273.15)} °C)`,\r\n          wind: \"Wind Speed: m/s is \" + data.wind.speed,\r\n          windDeg: \"Coming from \" + data.wind.deg + \" Degrees\",\r\n          country: \"Country Code: \" + data.sys.country,\r\n          name: data.name,\r\n          clouds: `Clouds count: ${data.clouds.all}`\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row container form center-align\">\r\n      <form onSubmit={updateWeather} width=\"500px\">\r\n        <input\r\n          id=\"icon_prefix\"\r\n          type=\"text\"\r\n          name=\"search-city\"\r\n          value={search}\r\n          className=\" search-input\"\r\n          onChange={updateSearch}\r\n        />\r\n        <br />\r\n        <a\r\n          className=\"waves-effect waves-light btn-small grey darken-4 z-depth-3\"\r\n          onClick={updateWeather}\r\n        >\r\n          <i className=\"material-icons right\">cloud</i>search\r\n        </a>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { WeatherContext } from \"../providers/WeatherContext\";\r\n\r\nexport default function Home() {\r\n  const [weather] = useContext(WeatherContext);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home\">\r\n        {\" \"}\r\n        <h2 className=\"city-name\">{weather.name}</h2>\r\n        <p> {weather.country} </p>\r\n        <p className=\"weather-description teal-text accent-2\">\r\n          {\" \"}\r\n          {weather.weather.toUpperCase()} <br />\r\n          <span className=\"clouds-count\">{weather.clouds}</span>\r\n        </p>\r\n        <p className=\"temperature cyan-text accent-2\">{`${weather.temp} ${weather.minTemp} ${weather.maxTemp}`}</p>\r\n        <p className=\"wind light-blue-text accent-2\">\r\n          {\" \"}\r\n          {weather.wind} {weather.windDeg}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Nav from \"./components/nav/Nav\";\nimport Form from \"./components/form/Form\";\nimport { WeatherProvider } from \"./components/providers/WeatherContext\";\nimport Home from \"./components/pages/Home\";\n\nfunction App() {\n  return (\n    <WeatherProvider>\n      <div className=\"App\">\n        <Nav />\n        <Form />\n        <Home />\n      </div>\n    </WeatherProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}